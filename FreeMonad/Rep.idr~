module Rep 

import HoareState

data St : (s : Type) -> (a : Type) -> (Pre s) -> (Post s a) -> Type where 
  MkSt : (prf : s >< p -> (a, s) >< q (fst prf)) -> St s a p q

stGet : St s (\_ => Unit) (\_ => Unit)
stGet = MkSt $ (\(s ** prf) => (s ** prf))

program : St Int (\_ => Unit) (\_ => Unit) 
program = stGet
 
